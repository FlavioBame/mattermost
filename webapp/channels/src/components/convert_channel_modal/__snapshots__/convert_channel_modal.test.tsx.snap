// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component/ConvertChannelModal should match snapshot for convert_channel_modal 1`] = `
<Modal
  animation={true}
  aria-labelledby="convertChannelModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="a11y__modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="dialog"
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h1"
      id="convertChannelModalLabel"
    >
      <MemoizedFormattedMessage
        defaultMessage="Convert {display_name} to a Private Channel?"
        id="convert_channel.title"
        values={
          Object {
            "display_name": "Channel Display Name",
          }
        }
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p>
      <MemoizedFormattedMessage
        defaultMessage="When you convert <b>{display_name}</b> to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only."
        id="convertChannel.question1"
        values={
          Object {
            "b": [Function],
            "display_name": "Channel Display Name",
          }
        }
      />
    </p>
    <p>
      <MemoizedFormattedMessage
        defaultMessage="Are you sure you want to convert <b>{display_name}</b> to a private channel?"
        id="convertChannel.question3"
        values={
          Object {
            "b": [Function],
            "display_name": "Channel Display Name",
          }
        }
      />
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <button
      className="btn btn-tertiary"
      data-testid="convertChannelCancel"
      onClick={[Function]}
      type="button"
    >
      <MemoizedFormattedMessage
        defaultMessage="No, cancel"
        id="convert_channel.cancel"
      />
    </button>
    <button
      autoFocus={true}
      className="btn btn-primary"
      data-dismiss="modal"
      data-testid="convertChannelConfirm"
      onClick={[Function]}
      type="button"
    >
      <MemoizedFormattedMessage
        defaultMessage="Yes, convert to private channel"
        id="convert_channel.confirm"
      />
    </button>
  </ModalFooter>
</Modal>
`;
